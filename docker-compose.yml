version: '3.7'

x-logging:
  &default-logging
  driver: "json-file"
  options:
    tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

services:
  policykit_app:
    image: metagovpolicykit/policykit:${policykit_tag}
    restart: always
    deploy:
      replicas: 1
    command: bash -c "python3 application/manage.py makemigrations &&
      python3 application/manage.py migrate &&
      python3 application/manage.py collectstatic --noinput &&
      python3 application/manage.py runserver 0.0.0.0:8000"
    environment:
      - "POSTGRES_DB=metagov"
      - "RABBITMQ_USER=admin"
      - "DOCKER_ENV_CHECK=true"
      - "POSTGRES_HOST=database"
      - "POSTGRES_USER=postgres"
      - "RABBITMQ_PASSWORD=mypass"
      - "RABBITMQ_HOST=rabbitmq_server"
      - "POSTGRES_PASSWORD=supersecretpassword"
    expose:
      - "8000"
    depends_on:
      - database
      - rabbitmq_server
    env_file:
      - .env
    networks:
      - monitoring
    logging: *default-logging
    labels:
      org.label-schema.group: "monitoring"

  database:
    container_name: postgresql
    image: postgres:alpine
    restart: always
    environment:
      - "POSTGRES_DB=metagov"
      - "POSTGRES_USER=postgres"
      - "POSTGRES_PASSWORD=supersecretpassword"
    ports:
      - "5432:5432"
    networks:
      - monitoring
    volumes:
      - policykit-database:/var/lib/postgresql/data:rw
    logging: *default-logging
    labels:
      org.label-schema.group: "monitoring"

  nginx:
    image: nginx
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - policykit-nginx-logs:/var/log/nginx
      - ./policykit/docker_data/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./policykit/docker_data/nginx/privatekey.pem:/etc/nginx/ssl/privkey.pem:ro
      - ./policykit/docker_data/nginx/fullchain.pem:/etc/nginx/ssl/fullchain.pem:ro
    networks:
      - monitoring
    logging: *default-logging
    labels:
      org.label-schema.group: "monitoring"

  rabbitmq_server:
    container_name: rabbitmq
    image: rabbitmq:3.9.13-management
    environment:
      - "RABBITMQ_DEFAULT_USER=admin"
      - "RABBITMQ_DEFAULT_PASS=mypass"
    ports:
      - "5672:5672"
      - "15673:15672"
    volumes:
      - policykit-rabbitmq:/var/lib/rabbitmq/
    networks:
      - monitoring
    logging: *default-logging
    labels:
      org.label-schema.group: "monitoring"

  jenkins:
    build:
      context: policykit/docker_data/jenkins
      dockerfile: Dockerfile
    container_name: jenkins
    privileged: true
    user: root
    restart: always
    ports:
      - "2375:2375"
      - "8081:8080"
      - "50000:50000"
    volumes:
      - /usr/bin/docker:/usr/bin/docker
      - policykit-jenkins:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/ubuntu/policykit:/home/ubuntu/policykit
    networks:
      - monitoring
    labels:
      org.label-schema.group: "monitoring"

  promtail:
    image: grafana/promtail:2.4.0
    container_name: promtail
    volumes:
      - /var/log:/var/log:ro
      - ./policykit/docker_data/promtail:/etc/promtail:rw
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    ports:
      - "1514:1514"
    restart: always
    command:
      -config.expand-env=true
      -config.file=/etc/promtail/promtail-config.yml
    networks:
      - monitoring
    labels:
      org.label-schema.group: "monitoring"

  loki:
    image: grafana/loki:2.4.0
    container_name: loki
    volumes:
      - policykit-loki:/data/loki:rw
      - ./policykit/docker_data/loki/loki-config.yml:/etc/loki/loki-config.yml:ro
    ports:
      - "3100:3100"
    restart: always
    command: -config.file=/etc/loki/loki-config.yml
    networks:
      - monitoring
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana
    container_name: "grafana"
    user: root
    volumes:
      - policykit-grafana:/var/lib/grafana
      - ./policykit/docker_data/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./policykit/docker_data/grafana/datasources:/etc/grafana/provisioning/datasources
    environment:
      - "GF_INSTALL_PLUGINS=grafana-worldmap-panel,grafana-polystat-panel,novatec-sdg-panel,macropower-analytics-panel"
    ports:
      - "3000:3000"
    restart: always
    networks:
      - monitoring
    labels:
      org.label-schema.group: "monitoring"

  prometheus:
    image: prom/prometheus
    container_name: "prometheus"
    volumes:
      - policykit-prometheus:/prometheus:rw
      - ./policykit/docker_data/prometheus/rules.yml:/etc/prometheus/rules.yml
      - ./policykit/docker_data/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    user: root
    restart: always
    expose:
      - "9090"
    command:
      --web.enable-lifecycle
      --storage.tsdb.retention.time=7d
      --config.file=/etc/prometheus/prometheus.yml
    networks:
      - monitoring
    labels:
      org.label-schema.group: "monitoring"

  cadvisor:
    image: 'google/cadvisor:latest'
    container_name: cadvisor
    restart: always
    volumes:
      - /:/rootfs:ro
      - /sys:/sys:ro
      - /cgroup:/cgroup:ro
      - /var/run:/var/run:ro
      - /dev/disk:/dev/disk/:ro
      - /var/lib/docker/:/var/lib/docker:ro
    expose:
      - "8080"
    networks:
      - monitoring
    labels:
      org.label-schema.group: "monitoring"

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    restart: always
    pid: "host"
    ports:
      - "9100:9100"
    networks:
      - monitoring
    labels:
      org.label-schema.group: "monitoring"

  alertmanager:
    image: prom/alertmanager:v0.23.0
    container_name: alertmanager
    restart: always
    ports:
      - "9093:9093"
    volumes:
      - policykit-alertmanager:/data
      - ./policykit/docker_data/alertmanager/alertmanager.yml:/config/alertmanager.yml
    command: --config.file=/config/alertmanager.yml --log.level=debug
    networks:
      - monitoring
    labels:
      org.label-schema.group: "monitoring"

volumes:
  policykit-loki:
  policykit-grafana:
  policykit-jenkins:
  policykit-database:
  policykit-rabbitmq:
  policykit-prometheus:
  policykit-nginx-logs:
  policykit-alertmanager:

networks:
  monitoring: